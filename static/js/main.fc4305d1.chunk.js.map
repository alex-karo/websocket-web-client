{"version":3,"sources":["github.svg","code-editor.tsx","log-select-menu.tsx","connect.tsx","message-log.tsx","send-message.tsx","app.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","CodeContainer","styled","div","_templateObject","CodeTitle","_templateObject2","CodeEditor","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","valid","onCodeChange","text","setState","code","handlePropsOnChange","onChange","onValidation","annotations","_","length","defaultCode","inherits","createClass","key","value","react","title","lib_default","a","mode","theme","onValidate","name","width","editorProps","$blockScrolling","React","LogSelectMenu","_React$Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","concat","anchorEl","handleClick","event","currentTarget","handleClose","handleChange","option","_this2","_this$props","options","disabled","id","open","Boolean","IconButton_default","onClick","History_default","Menu_default","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","map","MenuItem_default","ConnectContainer","connect_templateObject","ConnectInput","connect_templateObject2","ConnectButton","_templateObject3","Connect","log","url","onConnect","newLog","toConsumableArray","uniq","take","localStorage","setItem","JSON","stringify","onChangeUrl","e","target","onSelectOldUrl","getItem","parse","_this$props$connected","connected","TextField_default","label","fullWidth","log_select_menu_LogSelectMenu","Button_default","onDisconnect","color","MessagesContainer","message_log_templateObject","MessageItem","message_log_templateObject2","MessageType","message_log_templateObject3","MessageTime","_templateObject4","MessageContent","_templateObject5","MessageLog","messages","_ref","type","time","content","format","SendContainer","send_message_templateObject","SendInput","send_message_templateObject2","SendButton","button","send_message_templateObject3","SendControl","send_message_templateObject4","SendCheckbox","send_message_templateObject5","MessageHint","_templateObject6","SendMessage","isJson","message","onChangeInput","onChangeMessage","msg","onSendMessage","onChangeMessageType","checked","height","readOnly","highlightActiveLine","showPrintMargin","multiline","as","Button","FormControlLabel_default","control","Checkbox_default","Wrapper","app_templateObject","Header","header","app_templateObject2","AppContainer","main","app_templateObject3","MainTitle","h1","app_templateObject4","GitHubLink","app_templateObject5","MainContainer","section","app_templateObject6","SideContainer","_templateObject7","GlobalStyle","createGlobalStyle","_templateObject8","App","ws","changeMutatorFunction","func","Function","mutatorFunc","undefined","connectToServer","WebSocket","onmessage","onMessage","onclose","onConnectionClose","onerror","onError","onopen","addMessage","disconnectFromServer","close","Date","now","data","send","reason","_this$state","changedMessages","mutatedContent","pako","href","src","ghLogo","alt","Paper","connect_Connect","send_message_SendMessage","message_log_MessageLog","code_editor_CodeEditor","ReactDOM","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.fc4305d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.74f71385.svg\";","import 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/github';\nimport * as _ from 'lodash';\nimport * as React from \"react\";\nimport AceEditor from 'react-ace';\nimport styled from 'styled-components';\n\nconst CodeContainer = styled.div`\noverflow: hidden;\nborder-radius: 3px;\n`;\n\nconst CodeTitle = styled.div`\nfont-size: 14px;\ntext-transform: uppercase;\nmargin-bottom: .5rem;\n`;\n\ninterface IProps {\n  defaultCode?: string;\n  onChange: (code: string) => void;\n  title?: string;\n}\n\ninterface IState {\n  code?: string;\n  valid: boolean;\n}\n\nexport class CodeEditor extends React.PureComponent<IProps, IState> {\n  public state: IState = {valid: false};\n  constructor(props: IProps) {\n    super(props);\n    this.state.code = props.defaultCode;\n    this.handlePropsOnChange = _.debounce(this.handlePropsOnChange, 2000);\n  }\n\n  public onCodeChange = (text: string) => {\n    this.setState({code: text});\n    if (this.state.valid) {\n      this.handlePropsOnChange(text);\n    }\n  };\n\n  public handlePropsOnChange = (text: string) => {\n    this.props.onChange(text);\n  };\n\n  // @ts-ignore\n  public onValidation = (annotations) => {\n    const seriousErrors = _.filter(annotations, ['type', ['error', 'warning']]);\n    if (seriousErrors.length > 0) {\n      this.setState({valid: false});\n    } else {\n      this.setState({valid: true});\n    }\n  };\n\n  public render() {\n    return <div>\n      {this.props.title ?\n        <CodeTitle>{this.props.title}</CodeTitle> :\n        null}\n        <CodeContainer>\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"github\"\n            onChange={this.onCodeChange}\n            onValidate={this.onValidation}\n            name=\"mutator\"\n            width=\"470px\"\n            value={this.state.code}\n            editorProps={{$blockScrolling: true}}\n          />\n        </CodeContainer>\n    </div>;\n  }\n}\n","import IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport HistoryIcon from '@material-ui/icons/History';\nimport * as React from 'react';\n\nconst ITEM_HEIGHT = 48;\n\ninterface IProps {\n  options: string[];\n  id: string;\n  onChange: (text: string) => void;\n  disabled?: boolean;\n}\n\ninterface IState {\n  anchorEl: any;\n}\n\nexport class LogSelectMenu extends React.Component<IProps, IState> {\n  public state = {\n    anchorEl: null,\n  };\n\n  public handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  public handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  public handleChange = (option: string) => () => {\n    this.setState({ anchorEl: null });\n    this.props.onChange(option);\n  };\n\n  public render() {\n    const { anchorEl } = this.state;\n    const { options, disabled, id } = this.props;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <IconButton\n          onClick={this.handleClick}\n          disabled={disabled || options.length === 0}\n        >\n          <HistoryIcon />\n        </IconButton>\n        <Menu\n          id={id}\n          anchorEl={anchorEl}\n          open={open}\n          onClose={this.handleClose}\n          PaperProps={{\n            style: {\n              maxHeight: ITEM_HEIGHT * 4.5,\n              width: 400,\n            },\n          }}\n        >\n          {options.map(option => (\n            <MenuItem key={option} onClick={this.handleChange(option)}>\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n    );\n  }\n}\n","import Button from '@material-ui/core/Button/Button';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport _ from 'lodash';\nimport * as React from \"react\";\nimport { ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport { LogSelectMenu } from './log-select-menu';\n\ninterface IProps {\n  connected?: boolean;\n  onConnect: (url: string) => void;\n  onDisconnect: () => void;\n  url?: string;\n}\n\ninterface IState {\n  url: string;\n  log: string[];\n}\n\nconst ConnectContainer = styled.div`\n  display: flex;\n`;\nconst ConnectInput = styled.div`\n  flex-grow: 1;\n`;\nconst ConnectButton = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport class Connect extends React.Component<IProps, IState> {\n  public state: IState = {\n    log: [],\n    url: 'wss://echo.websocket.org',\n  };\n\n  constructor(props: IProps) {\n    super(props);\n    if (props.url) {\n      this.state.url = props.url;\n    }\n    const log = localStorage.getItem('connect-log');\n    if (log) {\n      this.state.log = JSON.parse(log);\n    }\n  }\n\n  public onConnect = () => {\n    this.props.onConnect(this.state.url);\n    const newLog = _([this.state.url, ...this.state.log]).uniq().take(10).value();\n    this.setState({\n      log: newLog,\n    });\n    localStorage.setItem('connect-log', JSON.stringify(newLog));\n  };\n\n  public render() {\n    const {connected = false} = this.props;\n    return <ConnectContainer>\n      <ConnectInput>\n        <TextField\n          id=\"url\"\n          label=\"Url\"\n          disabled={connected}\n          onChange={this.onChangeUrl}\n          value={this.state.url}\n          fullWidth={true}\n        />\n      </ConnectInput>\n      <LogSelectMenu\n        id=\"connect-log-menu\"\n        options={this.state.log}\n        onChange={this.onSelectOldUrl}\n        disabled={connected}\n      />\n      <ConnectButton>\n        {connected ?\n          <Button onClick={this.props.onDisconnect}>Disconnect</Button> :\n          <Button color=\"primary\" onClick={this.onConnect}>Connect</Button>\n        }\n      </ConnectButton>\n    </ConnectContainer>;\n  }\n\n  private onChangeUrl = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({url: e.target.value});\n  };\n\n  private onSelectOldUrl = (url: string) => {\n    this.setState({url});\n  }\n}\n","import { format } from 'date-fns';\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { IMessage } from './app';\n\ninterface IProps {\n  messages: IMessage[];\n}\n\nconst MessagesContainer = styled.div`\n  max-height: 500px;\n  padding: 1rem;\n  overflow-y: auto;\n`;\n\nconst MessageItem = styled.div`\n  display: flex;\n  margin-bottom: .5rem;\n`;\n\nconst MessageType = styled.div`\n  width: 50px;\n  color: #c3c3c3;\n`;\n\nconst MessageTime = styled.div`\n  width: 100px;\n`;\n\nconst MessageContent = styled.div`\n  max-width: calc(100% - 100px - 50px);\n  white-space: pre-wrap;\n  word-wrap: break-word;\n`;\n\nexport class MessageLog extends React.PureComponent<IProps> {\n  public render(): React.ReactNode {\n    const {messages} = this.props;\n    return <MessagesContainer>\n      {messages.map(({type, time, content}) =>\n        <MessageItem key={time}>\n          <MessageType>[{type}]</MessageType>\n          <MessageTime>{format(time, 'HH:mm:ss')}</MessageTime>\n          <MessageContent>{content}</MessageContent>\n        </MessageItem>\n      )}\n    </MessagesContainer>;\n  }\n}\n","import Button from '@material-ui/core/Button/Button';\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel/FormControlLabel';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport _ from 'lodash';\nimport * as React from \"react\";\nimport { ChangeEvent } from 'react';\nimport AceEditor from 'react-ace';\nimport styled from 'styled-components';\nimport { LogSelectMenu } from './log-select-menu';\n\ninterface IProps {\n  onSendMessage: (msg: string) => void;\n  connected?: boolean;\n}\n\ninterface IState {\n  message: string;\n  isJson: boolean;\n  log: string[];\n}\n\nconst SendContainer = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  margin-bottom: 1rem;\n`;\nconst SendInput = styled.div`\n  flex-grow: 1;\n  margin-right: 1rem;\n`;\nconst SendButton = styled.button`\n  display: block;\n`;\nconst SendControl = styled.div`\n  width: 150px;\n  text-align: right;\n`;\nconst SendCheckbox = styled.div``;\nconst MessageHint = styled.div`\n  font-size: .75em;\n  color: rgba(0, 0, 0, 0.54);\n  margin-bottom: .3em;\n`;\n\nexport class SendMessage extends React.PureComponent<IProps, IState> {\n  public state: IState = {\n    isJson: true,\n    log: [],\n    message: '',\n  };\n\n  constructor(props: IProps) {\n    super(props);\n    const log = localStorage.getItem('out-message-log');\n    if (log) {\n      this.state.log = JSON.parse(log);\n    }\n  }\n\n  public onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    this.onChangeMessage(e.target.value);\n  };\n\n  public onChangeMessage = (msg: string) => {\n    this.setState({message: msg});\n  };\n\n  public onSendMessage = () => {\n    this.props.onSendMessage(this.state.message);\n    const newLog = _([this.state.message, ...this.state.log]).uniq().take(10).value();\n    this.setState({\n      log: newLog,\n      message: '',\n    });\n    localStorage.setItem('out-message-log', JSON.stringify(newLog));\n  };\n\n  public onChangeMessageType = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({isJson: e.target.checked});\n  };\n\n  public render() {\n    const {connected = false} = this.props;\n    return <SendContainer>\n      <SendInput>\n        {this.state.isJson ?\n          <div>\n            <MessageHint>Message</MessageHint>\n            <AceEditor\n              mode=\"json\"\n              theme=\"github\"\n              onChange={this.onChangeMessage}\n              name=\"json-message-input\"\n              height=\"70px\"\n              width=\"100%\"\n              value={this.state.message}\n              editorProps={{$blockScrolling: true}}\n              readOnly={!connected}\n              highlightActiveLine={false}\n              showPrintMargin={false}\n            />\n          </div>\n          :\n          <TextField\n            id=\"message\"\n            label=\"Message\"\n            disabled={!connected}\n            onChange={this.onChangeInput}\n            value={this.state.message}\n            fullWidth={true}\n            multiline={true}\n          />\n        }\n      </SendInput>\n      <SendControl>\n        <SendButton\n          as={Button}\n          disabled={!connected || !this.state.message}\n          color=\"primary\"\n          onClick={this.onSendMessage}\n        >\n          Send\n        </SendButton>\n        <SendCheckbox>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={this.state.isJson}\n                onChange={this.onChangeMessageType}\n                value=\"isJson\"\n                disabled={!connected}\n              />\n            }\n            label=\"JSON\"\n          />\n        </SendCheckbox>\n        <LogSelectMenu\n          id=\"message-log-menu\"\n          options={this.state.log}\n          onChange={this.onChangeMessage}\n          disabled={!connected}\n        />\n      </SendControl>\n    </SendContainer>;\n  }\n}\n","import Paper from '@material-ui/core/Paper/Paper';\nimport * as _ from 'lodash';\nimport * as pako from 'pako';\nimport * as React from \"react\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CodeEditor } from './code-editor';\nimport { Connect } from './connect';\nimport ghLogo from './github.svg';\nimport { MessageLog } from './message-log';\nimport { SendMessage } from './send-message';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  width: 1400px;\n`;\n\nconst Header = styled.header`\nbackground-color: #17181B;\nheight: 2rem;\n\n& ${Wrapper} {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n`;\n\nconst AppContainer = styled.main`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  display: grid;\n  grid-template-columns: 900px 500px;\n  grid-column-gap: 10px;\n`;\n\nconst MainTitle = styled.h1`\nfont-size: 1.5rem;\ncolor: white;\nmargin: 0;\n`;\n\nconst GitHubLink = styled.a`\n width: 1.5rem;\n height: 1.5rem;\n \n svg {\n  fill: white;\n }\n`;\n\nconst MainContainer = styled.section`\n  padding: 1rem;\n`;\n\nconst SideContainer = styled.section`\n  padding: 1rem;\n`;\n\n// language=CSS\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: #FAFAFA;\n    font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n  }\n`;\n\ntype MessageType = 'in' | 'out' | 'error' | 'info';\n\nexport interface IMessage {\n  time: number;\n  content: string;\n  type: MessageType;\n}\n\ninterface IState {\n  connected: boolean;\n  messages: IMessage[];\n  // @ts-ignore\n  mutatorFunc?: (props, imports) => string;\n}\n\nexport class App extends React.Component<{}, IState> {\n  public state: IState = {\n    connected: false,\n    messages: [],\n  };\n  private ws?: WebSocket;\n\n  constructor(props: {}) {\n    super(props);\n  }\n\n  public render() {\n    const {messages, connected, mutatorFunc} = this.state;\n    const changedMessages: IMessage[] = messages.map(({time, type, content}) => {\n      let mutatedContent;\n      try {\n        mutatedContent = mutatorFunc && type === 'in' ?\n          _.toString(mutatorFunc({data: content, time}, {pako, _})) :\n          content;\n      } catch (e) {\n        mutatedContent = `Error: ${e}`;\n      }\n      return {\n        content: mutatedContent,\n        time,\n        type,\n      };\n    });\n    const defaultCode = 'const {data, time} = props;\\n' +\n      'const {_, pako} = imports;\\n\\n// Write code here\\nlet res = data;\\n\\nreturn res;';\n    return <div>\n      <Header>\n        <Wrapper>\n          <MainTitle>WS Web Client</MainTitle>\n          <GitHubLink href=\"https://github.com/alex-karo/websocket-web-client\">\n            <img src={ghLogo} alt=\"GitHub Repo\"/>\n          </GitHubLink>\n        </Wrapper>\n      </Header>\n      <Wrapper>\n        <AppContainer>\n          <MainContainer as={Paper}>\n            <Connect\n              connected={connected}\n              onConnect={this.connectToServer}\n              onDisconnect={this.disconnectFromServer}\n            />\n            <SendMessage\n              onSendMessage={this.onSendMessage}\n              connected={connected}\n            />\n            <MessageLog messages={changedMessages}/>\n          </MainContainer>\n          <SideContainer as={Paper}>\n            <CodeEditor\n              title=\"Input data mutator\"\n              onChange={this.changeMutatorFunction}\n              defaultCode={defaultCode}\n            />\n          </SideContainer>\n          <GlobalStyle/>\n        </AppContainer>\n      </Wrapper>\n    </div>;\n  }\n\n  private changeMutatorFunction = (text: string) => {\n    try {\n      // @ts-ignore\n      const func = new Function('props', 'imports', text);\n      // @ts-ignore\n      this.setState({mutatorFunc: func});\n    } catch (e) {\n      this.setState({mutatorFunc: undefined});\n    }\n  };\n\n  private connectToServer = (url: string) => {\n    const ws = new WebSocket(url);\n    ws.onmessage = this.onMessage;\n    ws.onclose = this.onConnectionClose;\n    ws.onerror = this.onError;\n    ws.onopen = () => {\n      this.ws = ws;\n      this.setState({\n        connected: true,\n      });\n      this.addMessage('info', 'Connected');\n    };\n\n  };\n\n  private disconnectFromServer = () => {\n    if (!this.ws) {\n      return;\n    }\n    this.ws.close(1000);\n\n  };\n\n  private onMessage = (e: MessageEvent) => {\n    this.setState({messages: [{time: Date.now(), content: e.data, type: 'in'}, ...this.state.messages]});\n  };\n\n  private onSendMessage = (data: string) => {\n    if (!this.ws) {\n      return;\n    }\n    this.ws.send(data);\n    this.setState({\n      messages: [{time: Date.now(), content: data, type: 'out'}, ...this.state.messages],\n    });\n  };\n\n  private onError = (e: Event) => {\n    this.addMessage('error', e);\n  };\n\n  private onConnectionClose = (e: CloseEvent) => {\n    this.addMessage('info', `Connection closed with code #${e.code}: ${e.reason}`);\n    delete this.ws;\n    this.setState({connected: false});\n  };\n\n  private addMessage = (type: MessageType, data: any) => {\n    this.setState({messages: [{time: Date.now(), content: data, type}, ...this.state.messages]});\n  };\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { App } from './app';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}